@using Shared_ViewModels.Product
@using Shared_ViewModels.Helpers
@model ProductVmDto

@{
    ViewData["Title"] = "Product Detail Page";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <!-- Show images product -->
            <div id="productImageCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @foreach (var productType in Model.ProductTypes)
                    {
                        <div class="carousel-item @(productType == Model.ProductTypes.First() ? "active" : "")" data-producttype="@productType.Id">
                            @foreach (var image in productType.ProductImages)
                            {
                                <img src="@image.ImageUrl" class="d-block w-100" alt="Product Image">
                            }
                        </div>
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#productImageCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#productImageCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        </div>
        <div class="col-md-6">
            <!-- Show infomation about product -->
            <div class="card border-0">
                <div class="card-body">
                    <h5 class="card-title">@Model.Name</h5>
                    <p class="card-text">@Model.Description</p>
                    <div class="d-flex justify-content-between align-items-center">
                        <p class="card-text mt-auto">
                            <span class="text-danger fw-bold ms-2 fs-3">@((Model.Price * (100 - Model.Discount) / 100).ToString("C"))</span>
                            <span class="text-decoration-line-through text-dark">@Model.Price.ToString("C")</span>
                        </p>
                        <span class="text-info fw-bold">Stocking</span>
                    </div>
                    <p class="card-text fw-bold">Discount: @Model.Discount %</p>

                    <div class="my-2">
                        @for (var i = 1; i <= 5; i++)
                        {
                            if (i <= @RatingHelper.CalculateAverageRating(Model.Ratings))
                            {
                                <span class="star">&#9733;</span>
                            }
                            else
                            {
                                <span class="star">&#9734;</span>
                            }
                        }
                    </div>
                    <p class="card-text mt-auto">
                        <span class="fst-italic fw-bold ms-2">Created Date: </span>
                        <span class="text-dark">@Model.CreatedDate.ToString("MM/dd/yyyy hh:mm:ss tt")</span>
                    </p>
                    <p class="card-text mt-auto">
                        <span class="fst-italic fw-bold ms-2">Updated Date: </span>
                        <span class="text-dark">@Model.UpdatedDate.ToString("MM/dd/yyyy hh:mm:ss tt")</span>
                    </p>

                    <hr class="my-3">

                    <h6>Choose Type</h6>
                    <div class="btn-group" role="group">
                        @for (int i = 0; i < Model.ProductTypes.Count; i++)
                        {
                            var productType = Model.ProductTypes.ToList()[i];
                            <button id="chooseProductType-@productType.Id" type="button" class="btn btn-secondary @(i == 0 ? "active" : "")" onclick="showProductImages(@productType.Id, this)">
                                @productType.Type
                            </button>
                        }
                    </div>

                    <hr class="my-3">

                    <!-- Add quantity for cart -->
                    <div class="mt-3">
                        <p class="card-text fw-bold">Quantity: </p>
                        <div class="input-group w-50">
                            <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(-1)">-</button>
                            <input type="text" id="productQuantity" class="form-control text-center bg-transparent" value="1" readonly>
                            <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(1)">+</button>
                        </div>
                    </div>

                    <!-- Add to Cart và Buy Now -->
                    <div class="mt-3 d-grid gap-2 d-md-flex justify-content-md-start">
                        <button class="btn btn-outline-dark btn-lg" type="button" onclick="addToCartDetail(@Model.Id, @((Model.Price * (100 - Model.Discount) / 100)))">Add to Cart</button>
                        <button class="btn btn-dark btn-lg" type="button">Buy Now</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="accordion accordion-flush my-3" id="accordionFlushExample">
        <!-- Write Review Accordion Item -->
        <div class="accordion-item">
            <h2 class="accordion-header text-light" id="flush-headingOne">
                <button class="accordion-button collapsed fs-4 fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
                    Write a Review
                </button>
            </h2>
            <div id="flush-collapseOne" class="accordion-collapse collapse" aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
                <div class="accordion-body">
                    <form asp-controller="Product" asp-action="Review" method="post">
                        <input type="hidden" name="ProductId" value="@Model.Id" />
                        <div class="mb-3 d-flex align-items-center">
                            <label for="rating" class="form-label mb-0">Rating:</label>
                            <div class="star-rating mx-3">
                                <input type="radio" id="star5" name="rating" value="5" /><label for="star5" title="5 stars">&#9733;</label>
                                <input type="radio" id="star4" name="rating" value="4" /><label for="star4" title="4 stars">&#9733;</label>
                                <input type="radio" id="star3" name="rating" value="3" /><label for="star3" title="3 stars">&#9733;</label>
                                <input type="radio" id="star2" name="rating" value="2" /><label for="star2" title="2 stars">&#9733;</label>
                                <input type="radio" id="star1" name="rating" value="1" /><label for="star1" title="1 star">&#9733;</label>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="review" class="form-label">Review:</label>
                            <textarea typeof="input" name="review" class="form-control" id="review" rows="3" placeholder="Write your review here..."></textarea>
                        </div>
                        <button type="submit" class="btn btn-dark">Submit Review</button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Show Reviews Accordion Item -->
        <div class="accordion-item">
            <h2 class="accordion-header text-light" id="flush-headingTwo">
                <button class="accordion-button collapsed fs-4 fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">
                    Show Reviews
                </button>
            </h2>
            <div id="flush-collapseTwo" class="accordion-collapse collapse" aria-labelledby="flush-headingTwo" data-bs-parent="#accordionFlushExample">
                <div class="accordion-body">
                    @foreach (var review in Model.Ratings)
                    {
                        <div class="review-item mb-3">
                            <div class="d-flex">
                                <img src="https://1.bp.blogspot.com/-y210S60pmh4/XrP7OQx4xeI/AAAAAAAAkgc/BaPXv5lxXK4qnl_H_VOxoHUQBEUDT88DACLcBGAsYHQ/s1600/Avatar-Dep-Nu%2B%252817%2529.jpg" class="rounded-circle me-3" style="width: 100px; height: 100px; object-fit: cover;" alt="Avatar">
                                <div>
                                    @for (var i = 1; i <= 5; i++)
                                    {
                                        if (i <= review.Rating)
                                        {
                                            <span class="star">&#9733;</span>
                                        }
                                        else
                                        {
                                            <span class="star">&#9734;</span>
                                        }
                                    }
                                    <p class="mb-1">@review.Review</p>
                                    <small class="text-muted">by User</small>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script type="text/javascript" asp-append-version="true">

        function addToCartDetail(productId, unitPrice) {
            var quantity = parseInt(document.getElementById("productQuantity").value);
            $.ajax({
                url: '@Url.Action("AddToCart", "Cart")',
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    ProductId: productId,
                    Quantity: quantity,
                    UnitPrice: unitPrice
                }),
                success: function (response) {
                    if (response.success) {
                        alert('Product added to cart!');
                        // Update cart count
                        updateCartCount(response.cartCount);
                    }
                },
                error: function (xhr, status, error) {
                    alert('Error adding product to cart.');
                }
            });
        }
    </script>
}