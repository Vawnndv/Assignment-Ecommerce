@using Shared_ViewModels.Product
@model Tuple<IList<ProductVmDto>, int>

@{
    ViewData["Title"] = "Category";
}

<div class="text-center">
    <ul>
        @if (Model == null)
            return;

        <div class="container my-3">
            <div class="row">
                @foreach (var product in Model.Item1)
                {
                    <div class="col-lg-4 col-md-6 col-sm-12 mb-4">
                        @await Component.InvokeAsync("ProductCard", product)
                    </div>
                }
            </div>

            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center custom-pagination">
                    <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="?page=@(ViewBag.CurrentPage - 1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                    @for (int i = 1; i <= Model.Item2; i++)
                    {
                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i">@i</a>
                        </li>
                    }
                    <li class="page-item @(ViewBag.CurrentPage == Model.Item2 ? "disabled" : "")">
                        <a class="page-link" href="?page=@(ViewBag.CurrentPage + 1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                </ul>
            </nav>


        </div>
    </ul>
</div>